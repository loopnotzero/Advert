@using Advert.Models.AdsTopic
@model AggregatorViewModel

@await Html.PartialAsync("_Header", Model)

<section class="content">
    <div class="row">
        <div class="col-md-3 p-1">
            <div class="card">
                <div class="card-body text-center">
                    <a href="/Profile">
                        @if (!string.IsNullOrEmpty(Model.Profile.ImagePath))
                        {
                            <img src="@Model.Profile.ImagePath" class="widget-profile__img widget-profile__img__hover" alt="profile-image">
                        }
                        else
                        {
                            <img src="/images/no_image.png" class="widget-profile__img widget-profile__img__hover" alt="profile-image">
                        }
                    </a>
                    <a href="/Profile">
                        <h5 id="profile-name" class="mb-3">@Model.Profile.Name</h5>
                    </a>
                    <div class="row">
                        <div class="col-md-12">
                            <span class="text-justify">Posts</span>
                            <h5 id="profile-ads-count" class="text-center">@Model.Profile.AdsTopicsCount</h5>
                        </div>
                    </div>                   
                </div>
            </div>
        </div>
        <div class="col-md-6 p-1">
            @{
                <div id="ads-topics" class="card">
                    @foreach (var adsTopic in Model.AdsTopics)
                    {
                        <div class="text-muted p-3">
                            <a href="/Profile/@adsTopic.ProfileName">
                                <small class="font-weight-bold">@adsTopic.ProfileName</small>
                            </a>

                            <small class="time"> @adsTopic.CreatedAt</small>

                            <ul class="list-inline float-md-right">                               
                                @if (adsTopic.IsTopicOwner)
                                {
                                    <li class="list-inline-item" onclick="onEditPostClick('@adsTopic.AdsId')">
                                        <a href="" title="" data-placement="top" data-target="#modal-backdrop-ignore" data-toggle="modal" data-original-title="Edit">
                                            <i class="zmdi zmdi-edit zmdi-hc-fw"></i>
                                        </a>                               
                                    </li>                                    
                                    <li class="list-inline-item">

                                        <a title="" data-placement="top" data-toggle="tooltip" href="" data-original-title="Delete">
                                            <i class="zmdi zmdi-delete zmdi-hc-fw"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                        <article id="@adsTopic.AdsId" class="card-hover">
                            <div class="card-body card-body__img">
                                <a href="/Topics/@adsTopic.AdsId">
                                    <h4 class="card-title font-weight-bold cut-long-text mb-2">@adsTopic.Title</h4>
                                </a>
                                @Html.Raw(adsTopic.Text)
                            </div>                            
                            <div class="row">
                                <div class="col-md-12 p-1">
                                    <div class="r-btn r-btn-light r-btn--icon waves-effect ml-4" onclick="onAdsTopicVoteClick('@adsTopic.AdsId', 1)">
                                        <i class="zmdi zmdi-favorite-outline zmdi-hc-fw"></i>
                                    </div>
                                    <small id="votes-count">@adsTopic.LikesCount</small>

                                    <div class="r-btn r-btn-light-no-hover r-btn--icon-no-hover">
                                        <i class="zmdi zmdi-comments zmdi-hc-fw"></i>
                                    </div>
                                    <small id="comments-count">@adsTopic.CommentsCount</small>

                                    <div class="r-btn r-btn-light-no-hover r-btn--icon-no-hover">
                                        <i class="zmdi zmdi-eye zmdi-hc-fw"></i>
                                    </div>
                                    <small id="ads-view-count">@adsTopic.ViewsCount</small>

                                    <small class="text-muted float-right mt-2 mr-4">
                                        <a href="/Topics/@adsTopic.AdsId">READ MORE...</a>
                                    </small>
                                </div>
                            </div>
                        </article>
                        <div style="border-bottom: 1px solid #d5d5d5;"></div>
                    }
                </div>
            }
            @if (Model.LastPage > 1)
            {
                <div class="mt-4">
                    <nav>
                        <ul class="pagination justify-content-center">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item pagination-first">
                                    <a class="page-link" href="/?page=1"></a>
                                </li>

                                <li class="page-item pagination-prev">
                                    <a class="page-link" href="/?page=@(Model.CurrentPage - 1)"></a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item pagination-first disabled">
                                    <a class="page-link" href="#"></a>
                                </li>

                                <li class="page-item pagination-prev disabled">
                                    <a class="page-link"></a>
                                </li>
                            }

                            @{
                                for (var index = Model.BeginPage; index <= Model.EndPage; index++)
                                {
                                    if (Model.CurrentPage == index)
                                    {
                                        <li class="page-item active">
                                            <a class="page-link" href="/?page=@index">@index</a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="/?page=@index">@index</a>
                                        </li>
                                    }
                                }
                            }

                            @if (Model.CurrentPage >= Model.EndPage)
                            {
                                <li class="page-item pagination-next disabled">
                                    <a class="page-link" href="#"></a>
                                </li>

                                <li class="page-item pagination-last disabled">
                                    <a class="page-link" href="#"></a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item pagination-next">
                                    <a class="page-link" href="/?page=@(Model.CurrentPage + 1)"></a>
                                </li>

                                <li class="page-item pagination-last">
                                    <a class="page-link" href="/?page=@Model.LastPage"></a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        </div>
        <div class="col-md-3 p-1">
            <div class="card p-4">
                <div style="border-bottom: 1px solid #d5d5d5; margin-bottom: 10px;">
                    <h4 class="text-muted">Recommendations</h4>
                </div>
                @{
                    @await Html.PartialAsync("RecommendedAdsTopics", Model.RecommendedAdsTopics)
                }
            </div>
        </div>
        
        <div id="modal-backdrop-ignore" class="modal fade" data-backdrop="static" tabindex="-1" style="display: none;" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h6 class="pull-left font-weight-bold" style="margin-top: 10px; margin-left: 10px">Edit post</h6>
                        <button type="button" class="btn btn-link pull-right" data-dismiss="modal">
                            <span>
                                <i class="zmdi zmdi-close zmdi-hc-fw"></i>
                            </span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @await Html.PartialAsync("EditAdsTopic")
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-link">
                            Save
                        </button>                                          
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    function onEditPostClick(adsId) {
        console.log(`ADS ID: ${adsId}`)
        postEditor.value("adfdasf");
    }
            
    function onAdsTopicVoteClick(adsId, voteType) {
        var vote = {
            adsId: adsId,
            voteType: voteType
        }
        $.ajax({
            url: "/Topics/CreateAdsTopicVoteAsync",
            type: "POST",
            data: JSON.stringify(vote),
            contentType: "application/json",
            error: function(jqXhr, textStatus, errorThrown) {
                console.log("jqXhr: " + jqXhr);
                console.log("textStatus: " + textStatus);
                console.log("errorThrown: " + errorThrown);
            },
            success: function(response) {
                switch (response.voteType) {
                case 1:
                    {
                        $(`#${adsId} small[id=votes-count]`).text(response.votesCount);
                    }
                    break;
                }
            }
        });
    }

    function onAdsTopicShareClick(adsId) {
        $.ajax({
            url: "/Topics/ShareAdsTopicAsync",
            type: "GET",
            contentType: "application/json",
            error: function(jqXhr, textStatus, errorThrown) {
                console.log("jqXhr: " + jqXhr);
                console.log("textStatus: " + textStatus);
                console.log("errorThrown: " + errorThrown);
            },
            success: function(response) {
                $("#ads-preview").html(response);
            }
        });
    }
    
    $('#modal-backdrop-ignore').on('displayChanged', function() {
        console.log("kjhkjhkjhjkhkjhkj");
    }); 
</script>