@model Egghead.Models.LoginViewModel

@{ ViewData["Title"] = "Login Page"; }

<div class="card-box">
    <div class="row">
        <div class="title col-md-12 font-bold text-left m-b-30" style="color: #222">
            <h6>
                Sign in with your Egghead account
            </h6>
        </div>
    </div>
    <form id="form" asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" novalidate="">
        <div class="form-group form-mbt-4 row">
            <div class="col-md-12">
                <label class="floating-label label-required">Email</label>
                <input type="email">
            </div>
        </div>
        <div class="form-group form-mbt-4 row">
            <div class="col-md-12">
                <label class="floating-label label-required">Password</label>
                <input type="password">
            </div>
        </div>
        <div class="form-group form-mbt-2 row">
            <div class="input-group">
                <span class="p-t-7">
                    <a href="/Account/Recover" class="text-muted"><i class="fa fa-lock m-r-5"></i> Forgot password?</a>
                </span>
                <span class="input-group-btn ml-auto">
                    <button id="eggh-login" class="btn btn-danger w-xs waves-effect waves-light">Next</button>
                </span>
            </div>
        </div>
    </form>
    <div class="col-sm-12 p-t-20 text-center text-muted">Don't have an account? <a href="/Account/Register"> Sign up</a></div>
</div>


<script>
    $("input[type='email']").focusin(function() {
        var prev = $(this).prev();      
        if (!prev.hasClass("floating-label-error")) {
            prev.addClass("label-transform");
        } else {
            prev.addClass("label-error-transform");
        }
    }).focusout(function() {
        var prev = $(this).prev();       
        if (!prev.hasClass("floating-label-error")) {
            prev.toggleClass("label-transform", !((this.value === "") && prev.hasClass("label-transform")));
        } else {
            prev.toggleClass("label-error-transform", !((this.value === "") && prev.hasClass("label-error-transform")));
            if (!(this.value === "")) {
                prev.removeClass("floating-label-error label-error-transform").addClass("floating-lable label-transform");
                $(this).css("background",
                    "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #5682a3 96%)");
            }
        }
    });

    $("input[type='password']").focusin(function() {
        var prev = $(this).prev();      
        if (!prev.hasClass("floating-label-error")) {
            prev.addClass("label-transform");
        } else {
            prev.addClass("label-error-transform");
        }
    }).focusout(function() {
        var prev = $(this).prev();       
        if (!prev.hasClass("floating-label-error")) {
            prev.toggleClass("label-transform", !((this.value === "") && prev.hasClass("label-transform")));
        } else {
            prev.toggleClass("label-error-transform", !((this.value === "") && prev.hasClass("label-error-transform")));
            if (!(this.value === "")) {
                prev.removeClass("floating-label-error label-error-transform").addClass("floating-lable label-transform");
                $(this).css("background",
                    "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #5682a3 96%)");
            }
        }
    });

    $(document).ready(function() {
        $("#eggh-login").click(function(e) {
            e.preventDefault();

            var url = $("#form").attr("action");
            console.log("Request url: " + url);

            var token = $("input[name=__RequestVerificationToken]").val();
            console.log("Request verification token: " + token);

            var email = $("input[type=email]").val();
            console.log("Email: " + email);

            var password = $("input[type=password]").val();
            console.log("Password: " + password);

            var additionalHeaders = {};

            if (token) {
                additionalHeaders["RequestVerificationToken"] = token;
            }

            $.ajax({
                url: url,
                type: "POST",
                data: JSON.stringify({ email: email, password: password }),
                headers: additionalHeaders,
                contentType: "application/json",
                error: function(jqXhr, textStatus, errorThrown) {
                    console.log("jqXhr: " + JSON.stringify(jqXhr));
                    console.log("Text status: " + JSON.stringify(textStatus));
                    console.log("Error thrown: " + JSON.stringify(errorThrown));

                    switch (errorThrown) {
                    case "Bad Request":
                        {
                            switch (jqXhr.responseJSON.responseStatusCode) {
                            case 4:
                                {
                                    $("input[type='email']")
                                        .css("background",
                                            "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #ee6e73 96%)")
                                        .prev().addClass("floating-label-error").text(jqXhr.responseJSON.errorMessage);
                                }
                                break;
                            case 8:
                                {
                                    $("input[type='password']")
                                        .css("background",
                                            "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #ee6e73 96%)")
                                        .prev().addClass("floating-label-error").text(jqXhr.responseJSON.errorMessage);
                                }
                                break;
                            }
                        }
                        break;
                    case "Internal Server Error":
                        {
                            //todo: Add card box notification
                            console.log("Service is temporarily unavailable, please try again later");
                        }
                        break;
                    }
                },
                success: function(model) {
                    console.log("Error message: " + model.errorMessage);
                    console.log("Response status code: " + model.responseStatusCode);

                    switch (model.responseStatusCode) {
                    case 0: //Email not found
                        {
                            $("input[type='email']")
                                .css("background",
                                    "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #ee6e73 96%)")
                                .prev().addClass("floating-label-error label-error-transform").text(model.errorMessage);
                        }
                        break;
                    case 1: //Password do not match
                        {
                            $("input[type='password']")
                                .css("background",
                                    "linear-gradient(to bottom, rgba(255, 255, 255, 0) 96%, #ee6e73 96%)")
                                .prev().addClass("floating-label-error label-error-transform").text(model.errorMessage);
                        }
                        break;
                    case 2: //Authorization failed
                        {

                        }
                        break;
                    default: //Not implemented response status handling
                        {

                        }
                        break;
                    }
                }
            });
            return false;
        });
    });
</script>