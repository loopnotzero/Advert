<header class="header">
    <div class="header__logo">
        <h1>
            <a href="/" style="text-decoration: none">ADVERT</a>
        </h1>
    </div>
    <ul class="top-nav">
        <li class="dropdown">
            <a id="publish-ads" href="#" class="waves-effect" data-toggle="dropdown" aria-expanded="false">
                <i class="zmdi zmdi-mail-send zmdi-hc-fw"></i>
            </a>
        </li>
        <li class="dropdown">
            <a href="" data-toggle="dropdown" class="waves-effect" aria-expanded="false">
                <i class="zmdi zmdi-more-vert"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right" x-placement="bottom-end" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-171px, 36px, 0px);">
                <a id="profile" href="#" class="dropdown-item">Profile</a>
                <a id="log-out" href="#" class="dropdown-item">Log out</a>
            </div>
        </li>
    </ul>
</header>

<section class="content">
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <input id="title" type="text" class="form-control" maxlength="100" placeholder="What are you selling?">
            </div>

            <div class="form-group">
                <input id="price" type="text" class="form-control" placeholder="Price">
            </div>

            <div class="form-group">
                <input id="pac-input" type="text" class="form-control" placeholder="Enter a location (optional)">
                <div id="map"></div>
            </div>

            <div class="form-group">
                <div id="dropzone">
                    <form asp-controller="Advertisements" asp-action="AddAdvertisementPhotos" class="dropzone needsclick dz-clickable" id="demo-upload">
                        <div class="dz-message needsclick">
                            Drop files here or click to upload up to +10 photos
                        </div>
                    </form>
                </div>
            </div>

            <textarea id="ads-editor" style="display: none; margin-top: 25px"></textarea>
        </div>
    </div>
</section>

<script>
    $(document).ready(function() {
        if ($('select.select2')[0]) {
            var select2Parent = $('.select2-parent')[0] ? $('.select2-parent') : $('body');

            $('select.select2').select2({
                dropdownAutoWidth: true,
                width: '100%',
                dropdownParent: select2Parent
            });
        }

        var simplemde = new SimpleMDE({
            status: false,
            element: $("#ads-editor")[0],
            placeholder: "Type here...",
            fullScreen: false,
            withPreview: false
        });

        $("#publish-ads").click(function(e) {
            e.preventDefault();

            var title = $("#title").val();

            if (title === null || title === "")
                return;

            var text = simplemde.options.previewRender(simplemde.value());

            if (text === null || text === "")
                return;

            var ads = JSON.stringify({
                title: title,
                text: text
            });

            publishAdvertisement(ads);

            return false;
        });

        function publishAdvertisement(ads) {
            $.ajax({
                url: "/Ads/PublishAdvertisementAsync",
                type: "POST",
                data: ads,
                contentType: "application/json",
                error: function() {
                    console.log("Publish ads error");
                },
                success: function(response) {
                    window.location.href = response.returnUrl;
                }
            });
        }
    });
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA_-PhtwehLC1cp4anhiusMarGdGYbPcAM&libraries=places&callback=initMap" async defer></script>

<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'),
            {
                center: { lat: -33.8688, lng: 151.2195 },
                zoom: 13
            });
        var card = document.getElementById('pac-card');
        var input = document.getElementById('pac-input');

        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

        var autocomplete = new google.maps.places.Autocomplete(input);

        // Bind the map's bounds (viewport) property to the autocomplete object,
        // so that the autocomplete requests use the current map bounds for the
        // bounds option in the request.
        autocomplete.bindTo('bounds', map);

        // Set the data fields to return when the user selects a place.
        autocomplete.setFields(['address_components', 'geometry', 'icon', 'name']);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed',
            function() {
                infowindow.close();
                marker.setVisible(false);
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert("No details available for input: '" + place.name + "'");
                    return;
                }

                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17); // Why 17? Because it looks good.
                }
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);

                var address = '';
                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }

                infowindowContent.children['place-icon'].src = place.icon;
                infowindowContent.children['place-name'].textContent = place.name;
                infowindowContent.children['place-address'].textContent = address;
                infowindow.open(map, marker);
            });
    }
</script>
